{"ID":"20241011005900-dnggf53","Spec":"1","Type":"NodeDocument","Properties":{"id":"20241011005900-dnggf53","title":"GPT之后再无软件工程吗","type":"doc","updated":"20241011010403"},"Children":[{"ID":"20241011010403-eyb4b59","Type":"NodeParagraph","Properties":{"id":"20241011010403-eyb4b59","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"在虎扑评分榜上，软件工程专业的评分似乎不算低。不过在一些其他专业的家伙的羡慕的声音里，有一句评论让我相当害怕：GPT之后无软工。即使我在修补网站之外也挺可以做厨师或者面包师之类的，但还是挺害怕在35岁之前提前毕业的。GPT之后真无软件工程吗？GPT之后还有程序员吗？这种性命攸关的问题还是值得想一想。"}]},{"ID":"20241011010403-yywnhy3","Type":"NodeParagraph","Properties":{"id":"20241011010403-yywnhy3","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"从结果上来说，我觉得，是的。虽然如今GPT还没有在编程领域大规模应用，但看最近的微软的Copilot和阿里巴巴通义灵码的进展来说，快了。"}]},{"ID":"20241011010403-je1bp6k","Type":"NodeParagraph","Properties":{"id":"20241011010403-je1bp6k","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"Coplot我用过，对于单个的代码文件相当厉害，我在写Python小练习的时候常常写完函数名它就自动帮我写完整个函数体。比如：我定义了一个名叫“是否是质数”的函数，它就马上用把函数体补全了。不过它的思路是一种很容易想到的基于从二开始的试除法，相对来说比较低效。当然如果它使用欧拉筛法或是埃拉托斯特尼筛法可以获得更低的时间复杂度。在写Pythob练习题方面它过于厉害，以至于我害怕过于依赖它我思想会退化，最后在vscode里禁用了Copliot。虽然Copilot迄今为止只能在单文件上进行分析，无法应用于整个项目目录，但理论上完全可以用一些提示工程的技巧来解决这个问题。"}]},{"ID":"20241011010403-81sz4e3","Type":"NodeParagraph","Properties":{"id":"20241011010403-81sz4e3","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"阿里巴巴的“通义灵码”我是在刷新闻的时候看到过但是我没用过，看它的发行说明，给我一种相对于Copilot更加厉害的感觉。根据官网的说明，除了一些常规的AI自动不全的功能之外，它自称增加了跨文件感知能力。我推测它也许可以分析整个项目的代码然后进行补全。如果它真的如宣称的所说那样拥有强大的代码补全能力，它应该能替代一部分水平一般往下的程序员。即使是在科技与原罪交织影响的中国，它对与写程序的工作也像StableDiffusion那样对人类程序员构成了相当大的威胁。不过也许我应该找个时间试用一下它。"}]},{"ID":"20241011010403-tbxl0ht","Type":"NodeParagraph","Properties":{"id":"20241011010403-tbxl0ht","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"除了这些现实中已经落地的咄咄逼人的自动编程应用，对于程序员饭碗的威胁更多的来自于多个层面对AI的投入与发掘，比如AI Agent（人工智能代理，简称代理）。它们比起如今的ChatGPT或Claude的本质区别就是会使用工具，像人一样使用工具。如果用公式来说明的话，代理 = 大预言模型 + 工具接口 + 结果反馈，其中我认为最为重要的应该就是反馈。不过比起抽象的描述我更倾向于认为代理是一个或一群会会用vscode调试程序用PowerPoint做幻灯片用Davinci剪视频的ChatGPT。业界大佬似乎挺高看这一发展方向，在比尔盖茨的博客"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://gatesnotes.com/","TextMarkTextContent":"gatesnotes.com"},{"Type":"NodeText","Data":"上，他表现了他对作为类似经纪人或是私人教师身份存在的AI Agent重要性的肯定和对其前途的乐观。"}]},{"ID":"20241011010403-153qt5w","Type":"NodeParagraph","Properties":{"id":"20241011010403-153qt5w","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"在我的体验中，如今的ChatGPT（不是说GPT3.5而是说GPT4）写代码相当容易犯错。比如在Python切片一个字符数组时无法给出准确的结果，它认为 “Hello, world!\"[-4:]的结果是\"ld!”，但经过我验证的正确答案应该是\"rld!”。即使是被称作 openai 或是当前全世界最强大的模型，在手写代码的情况下似乎也会产生一些低级错误。"}]},{"ID":"20241011010403-248o212","Type":"NodeParagraph","Properties":{"id":"20241011010403-248o212","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"这很好解释：一个生活在没有引力的地方的外星人在对伽利略的小球进行受力分析的时候忘掉加上引力是很好理解的，即使那个外星人已经通过阅读知道一种名叫引力的东西的存在。同样的道理，如今GPT是在一些可信程度堪忧的文本中扒拉信息，甚至可能因为版本的冲突而得到彼此矛盾的结果，它无法验证代码的真实可靠程度，无法像人类一样从编译器的错误或者不符合常理的输出中意识到自己的错误并进行改变。"}]},{"ID":"20241011010403-8px16jx","Type":"NodeParagraph","Properties":{"id":"20241011010403-8px16jx","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"从成为优秀程序员所需能力的角度来看的话，至少AI的知识库，沟通表达能力和情商已经超越人类。编写中型大型软件需要的跨文件跨代码的理解能力相当容易突破，我们如今嘲笑GPT对于但文件代码中的并不算优异的准确度，认为ChatGPT是智障GPT，或者说对与AI局限的认识判断基本都是基于AI手写代码无法使用编译器调试器的前提。然而这个前提并不稳固，我们当前的优越感和侥幸感都是建立于沙子之上。"}]},{"ID":"20241011010403-2x22sbe","Type":"NodeParagraph","Properties":{"id":"20241011010403-2x22sbe","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"距离AI能够使用工具，也许只差计算机视觉获得屏幕组件树方面一点点的突破；甚至不需要这样，只需要在多模态感知的功能中比当下多前进一点点，就可以跨越这条此岸到彼岸的微小沟壑，比如如今的谷歌集成了Gemini Pro的Bard通过看拍的屏幕的照片就可以获得代码和编译器输出进而分析问题所在。甚至连多模态也不需要，只需要 vscode 或 Pycharm 的官方向AI开放某个获取输出的接口，AI就可以立刻得到反馈而获得进化。甚至连官方都可以不必下场，因为 vscode 开源和可扩展性强的特点，任何人都可以为AI创造这个接口。在人类使用工具能力的堡垒面前，AI早已突破，唯一的问题是那些掌控AI的公司或组织什么时候宣布这个消息。"}]},{"ID":"20241011010403-m3sgn0r","Type":"NodeParagraph","Properties":{"id":"20241011010403-m3sgn0r","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"然而世界上的事情并不能被如此简单的归纳，当机械征服一个领域之后就简单的宣称这一领域已经丧失了价值。比如织机的普及倾轧着纺织工人的生路，却无法取代熟练的手工艺匠人，至少在苏绣这个领域不可以。我在苏州逛街的时候常常看到相当好看但价格却成千上万的手工苏绣作品，这也许可以证明，至少从商业的角度来说，即使是原子层面与原苏绣相同的机械制品也无法还原匠人一针一线之中所承载的情感价值。"}]},{"ID":"20241011010403-is23zb4","Type":"NodeParagraph","Properties":{"id":"20241011010403-is23zb4","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"如果从结果而非对从业者影响的角度来说，围棋不会因为阿尔法狗的缜密而受人冷落，绘画不会因为扩散模型的强大而失去价值。行业仍将存在，只是机械设计师取代了部分人工设计师。程序设计的需求仍将存在，不过只有娴熟和优秀的人类能够留下来。其他的人也许只能从与人性更加密切的领域中找到自身的价值。"}]},{"ID":"20241011010403-8av2hw1","Type":"NodeParagraph","Properties":{"id":"20241011010403-8av2hw1","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"如果从偏向人类过分复杂的快乐机制，乐观的方面来说，也许比起所能达成的结果，人类在满足自身的过程中更加看重所展现出的人的局限性，人的弱点以及超越自身的努力。虽然人的功率远不如内燃机，但一场精彩的运动会比起一次普通的驾车通勤更能激发肾上腺素的分泌。即使AI能生成无与伦比精妙的文辞，但我更愿意阅读爱伦坡在苦涩的生活之中仰望纯粹美好而创作的略显迟涩的诗句。"}]},{"ID":"20241011010403-20iwv4n","Type":"NodeParagraph","Properties":{"id":"20241011010403-20iwv4n","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"基因在亿万年旅途中所被塑造的快乐模式不会因为现代工业文明的一句“更高，更快，更强”的崭新价值观而灰飞烟灭。虽然电子邮件的效率远超手写邮件，即时通讯软件，emoji，表情包在便利性上已经超过线下见面，但仍不能完全的取代后者。低效的手写信件更有助于传达诚意，握手，拥抱，勾肩搭背更能传递温暖。"}]},{"ID":"20241011010403-m6ns0xe","Type":"NodeParagraph","Properties":{"id":"20241011010403-m6ns0xe","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"从这个角度来说，一行人写的跑不了却能清晰展现思路的伪代码的价值有时远远超过机器生成的也许能够运行的二进制程序。数学可以说是种形式化的语言，编程可以说是一种形式化的思考。如果说像哲学家所说思考可以确定主体的存在，那形式化的思考也许能在更多层面确认主体的存在。当编程作为一种表达思想的媒介时，AI无法撼动手写代码的地位。"}]},{"ID":"20241011010403-00u45ej","Type":"NodeParagraph","Properties":{"id":"20241011010403-00u45ej","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"但如果从更加结果导向或更加悲观的角度进行考虑，人在意的只有结果，而不是具体实现的过程。共情与超越并非生活的刚需。或是你为一个笑话发笑，不是因为它是人而不是机器写的，而是因为它确实可笑。你设置一张精美的图片为桌面壁纸，不是因为它是人画的而不是机器画的，而是因为它确实漂亮。某大型电视台选择用AI生成晚会的吉祥物，所考虑的不是情感需求而是成本或利益。"}]},{"ID":"20241011010403-q4ej7lk","Type":"NodeParagraph","Properties":{"id":"20241011010403-q4ej7lk","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"完全可以设想这样的情景：一个笑语盈盈的虚拟主播VTuber，用着Claude在亿万字节中扒拉出来的人设，套着StableDiffusion设计的皮，用Sovits合成的音色说着GPT4合成的笑话和生活趣事。如果整个工程集成得当，你会想看她直播下饭的。"}]},{"ID":"20241011010403-cg058ej","Type":"NodeParagraph","Properties":{"id":"20241011010403-cg058ej","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"人很难将他人以具有缺点和局限性的同类进行对待，而是将人功能化物化。你很难和想和你没带手机迷路时想走过去问路的大爷产生共情，你只会想那大爷为什么没有步行导航和公交到站时间查询的功能。"}]},{"ID":"20241011010403-hhuxnos","Type":"NodeParagraph","Properties":{"id":"20241011010403-hhuxnos","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"程序设计领域不需要共情，也不需要展现身为同类的局限性。结果远大于过程，即使是强调过程管理的软件工程领域，过程更多的是作为一种文档的方式呈现。编程是一种类似于开车的技艺而不是类似于绘画的艺术，面对一个问题大体上不存在条条大路通罗马的解决方案的多样性而是存在最优解。这种一事只需一种方法的原则甚至已经成为一些语言（Python，说的就是你）或设计方式的卖点。"}]},{"ID":"20241011010403-u8ix5qj","Type":"NodeParagraph","Properties":{"id":"20241011010403-u8ix5qj","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"过去数十年计算机科学中所谓软件开发的艺术大多只是降低降低人的思考量或者通信成本的解决方案。当思考能力趋于无限，通信成本趋近于零时，也就是当AI降临软件开发领域时，所谓的技巧将在绝对的实力前没有任何还手余地。特别是当多个AI进行合作的时候，根据群理论的观点，知识将”涌现“而不是符合直觉的线性增长，蚁群算法的可行性至少在一定程度上证明了这个观点。"}]},{"ID":"20241011010403-k8rt3ak","Type":"NodeParagraph","Properties":{"id":"20241011010403-k8rt3ak","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"简而言之，GPT出现之时，的确是人类软件工程师的落幕。不仅软件工程师是这样，人类已经进入价值被机器超越的暮色之中。我们所耳濡目染的个人主义英雄故事，也许是这个时代人类光芒的最后挽歌。"}]},{"ID":"20241011010403-7qji7jj","Type":"NodeParagraph","Properties":{"id":"20241011010403-7qji7jj","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"然而事情当真糟糕至此吗？当我们把注意力从外部转移到内在之中，也许可以发现，不需悲观至此。因为所谓代码所谓程序，并不完全可以衡量价值。拥有成为程序设计师的愿望本身，便是我们骄傲的根本。"}]},{"ID":"20241011010403-zcpdtys","Type":"NodeParagraph","Properties":{"id":"20241011010403-zcpdtys","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"软件工程师是怎样的人？他们乐于学习和探索，拥抱改变和未知。他们乐于承认自己局限而勤于超越自身的局限。时而爱好离群索居的清明自在时而欢迎激烈的头脑风暴。他们乐于接受前人无偿的馈赠却也愿将自身的成果无偿分享给同侪后辈。他们热爱开放却也并不强求开放，既追求中心化的效率又追求去中心化的安全。他们让自己作品的功能增无可增，让自己作品的复杂度削无可削。他们是探索者也是实践者，是离群者也是协作者。"}]},{"ID":"20241011010403-jhrcm9q","Type":"NodeParagraph","Properties":{"id":"20241011010403-jhrcm9q","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"如果他们不是生活在这个时代而是生活在古代希腊，他们会是那一批研究作物种植或酿酒原理的人。如果他们生活在古罗马，他们会是那些研究舰船和冶铁技术的人。如果生活在第一次工业革命后的欧洲，他们会是那些钻研机械或印染或为了研究细胞和行星手磨镜片的人。只是因为他们降生到了我们这个时代，他们看见了信息世界的广袤领域和潜在力量，于是便发愿成为那些理解乃至控制信息的人。"}]},{"ID":"20241011010403-qfsqpng","Type":"NodeParagraph","Properties":{"id":"20241011010403-qfsqpng","updated":"20241011010403"},"Children":[{"Type":"NodeText","Data":"信息在大部分领域中过于突出的表现，成就了那些理解控制信息的主体的力量。进而决定在当下信息即是权力。拥有信息即是拥有权力。比如键盘前动动手指就可以通过更改一个人的二维码而限制其人身权利，一行也许32位的IP拦截设置就可以阻拦大众接触到不同的观点。虽然控制了信息不等于控制了世界，但如果想阻拦妄想控制世界的人，绝对要打破它对信息的控制。强大的技术应该解放人类而不是加强奴役。"}]},{"ID":"20241011010403-8vzbqk9","Type":"NodeParagraph","Properties":{"id":"20241011010403-8vzbqk9","updated":"20241011010403"},"Children":[{"Type":"NodeTextMark","TextMarkType":"s","TextMarkTextContent":"当奴役从身体将要蔓延至心灵之时，当开始时怀抱尊严的口服心不服将成为洗脑后的愚昧和麻木之时，当沉默由爆发之前的沉默将成为灭亡之前的沉默之时。当反抗的战争蔓延至虚拟空间时，每个程序员都是维护自由与理想的士兵。退无可退之时，是拥有理想与脆弱性的士兵，而不是一秒能写一百万行程序的AI站出来，愿为别人的生命而舍弃自己的生命，为别人的自由而牺牲自己的自由。"}]}]}