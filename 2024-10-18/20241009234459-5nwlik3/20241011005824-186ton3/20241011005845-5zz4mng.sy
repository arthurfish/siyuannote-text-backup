{"ID":"20241011005845-5zz4mng","Spec":"1","Type":"NodeDocument","Properties":{"id":"20241011005845-5zz4mng","title":"奇怪相机开发日志","type":"doc","updated":"20241011010359"},"Children":[{"ID":"20241011010359-emhxi73","Type":"NodeParagraph","Properties":{"id":"20241011010359-emhxi73","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"给你一个奇怪的相机，给你它的最底层串口通信协议和你并不熟悉的语言的程序库，你能写个Windows的上位机程序来控制它并绘制取得的数据吗？"}]},{"ID":"20241011010359-kydj6hz","Type":"NodeParagraph","Properties":{"id":"20241011010359-kydj6hz","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"我之前参加的一个项目组的老师问我们光学实验室有个项目，看我们有没有兴趣。本着不嫌摊子大的心态我就准备过去看看。无论人文环境还是硬件环境感觉都挺不错。学长看起来人很好，教授也挺慈祥的样子，而且光学实验室的高级设备让我相当愉悦。我就打算呆下来，看看能做什么。"}]},{"ID":"20241011010359-babk1ho","Type":"NodeParagraph","Properties":{"id":"20241011010359-babk1ho","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"实验室新来了一个设备，一个奇怪的相机。据说它和光栅和激光配合起来可以获得物质的某种光谱，然后可以通过光谱来确定这个物质是环乙烷还是聚乙腈。总而言之是非常漂亮的设备，无论是从功能还是价格来看。"}]},{"ID":"20241011010359-c48qogr","Type":"NodeParagraph","Properties":{"id":"20241011010359-c48qogr","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"不过这样漂亮的设备如果没有好的软件来驱动的化也无法发挥它的全部性能。目前实验室虽然有一个可以用的上位机软件，但欠缺很多需要的功能，需要进行二次开发。"}]},{"ID":"20241011010359-3t3efq8","Type":"NodeParagraph","Properties":{"id":"20241011010359-3t3efq8","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"对于要对这个设备进行二次开发的我来说，有一个好消息和坏消息。好消息是我不需要从零开始，存在现成的函数库，也许只要稍稍魔改就好了。坏消息是，这个函数是用C"},{"Type":"NodeTextMark","TextMarkType":"tag","TextMarkTextContent":"语言写的，而且基本用的都是微软.NET的生态系统。然后我完全不懂C"},{"Type":"NodeText","Data":"​语言，完全没做过.NET平台的开发。"}]},{"ID":"20241011010359-a59l8im","Type":"NodeParagraph","Properties":{"id":"20241011010359-a59l8im","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"怎么办？是现学C#然后霸王硬上弓魔改，还是换别的语言完全重写函数库然后用熟悉的环境进行开发？也许我需要先阅读一下相机的用户手册和厂商提供的程序库，然后再决定所使用的路线。"}]},{"ID":"20241011010359-udr0n4r","Type":"NodeParagraph","Properties":{"id":"20241011010359-udr0n4r","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"我先看了相机的用户手册，虽然源语言是英文但这并不妨碍我谷歌翻译后看中文。手册里讲了相机的大致工作原理，内部寄存器的作用，串口命令如何构造和接受。这个时候我对整个相机的整体使用有了一定的了解，但还是不太清楚它的实际工作流程。比如手册里提到的“空闲模式”和EEPROM有什么关系，为了获取数据我应该使用哪种工作状态？第一次阅读手册的尝试就此作罢，然后我再尝试进行阅读程序库。"}]},{"ID":"20241011010359-tdvt0p6","Type":"NodeParagraph","Properties":{"id":"20241011010359-tdvt0p6","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"万事开头难，阅读C#程序的过程完全可以用噩梦来形容。从我决定开始阅读源码到我真的看起来花了大概一天多的时间。但我觉得我也真算尽力了，别的不说就Visual Studio的安装和弄懂“解决方案”是什么就已经让我算是心力交瘁了。我领教到了微软把简单问题复杂化的能力，还有不说人话的中文翻译。"}]},{"ID":"20241011010359-ksmkow2","Type":"NodeParagraph","Properties":{"id":"20241011010359-ksmkow2","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"怀揣着“C#语言能难到哪去”的心态，在我无数次的尝试之后终于打开了类视图，定位到了核心的串口操作的函数，然后我就懵了。也许我可以直接把它的代码拍到这里。你们大概会说：这是什么玩意？我当时也就这么傻看着代码：这TM的是什么玩意？"}]},{"ID":"20241011010359-pr2hy89","Type":"NodeParagraph","Properties":{"id":"20241011010359-pr2hy89","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"这些代码让我感觉我从信息时代跌入了茹毛饮血的原始时代。满屏的大写常量，满屏的抽象的左移位运算，满屏的缩写和下划线，硬是把高级优雅的C#语言写出了汇编一般的廉价感。虽然这也许这就是Win32开发的日常，但也许是我大脑无法处理代码中海量的状态，它给我的印象应该就是“屎山”。"}]},{"ID":"20241011010359-t4624i9","Type":"NodeParagraph","Properties":{"id":"20241011010359-t4624i9","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"屎山就屎山吧，能用就行。我计划把现有的有关串口通信的C"},{"Type":"NodeTextMark","TextMarkType":"tag","TextMarkTextContent":"程序改写成库，然后用别的语言通过某些机制来调用它。C"},{"Type":"NodeText","Data":"​应该也内置了反射的机制，可以把外部的文本命令转化成函数调用，然后强制转换每个参数。我尝试的写了一个反射的小测试项目，但是感觉效果并不太好，于是觉得此路不行转换思路。"}]},{"ID":"20241011010359-grk21np","Type":"NodeParagraph","Properties":{"id":"20241011010359-grk21np","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"现在我回想起来也许是当时在陌生的语言面前完全失去理智，在串口通信代码钱面对相当复杂的参数面前不知所措。理论上讲我应该可以写出这个反射的代码，只要写完各种基本类型及其数组的映射就行了。虽然这个思路对于不返回值而是在修改参数对应的数组的函数来说完全不能用，但还是有值得一试的空间。"}]},{"ID":"20241011010359-tyccepz","Type":"NodeParagraph","Properties":{"id":"20241011010359-tyccepz","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"然后我在尝试完全使用C#语言进行开发。我大概知道了串口通信库每个函数的用法，开始研究起了GUI界面的代码。众所周知Visual Studio也是一款UI设计工具，我似乎又回到了初中时用VS画GUI界面的时候了。我尝试理解组件设计界面的组件名和GUI代码中对象的映射对应关系，然后尝试修改了现有的界面，把图像显示组件和绘图组件放在同一个窗体里。"}]},{"ID":"20241011010359-oezw624","Type":"NodeParagraph","Properties":{"id":"20241011010359-oezw624","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"没崩。看来我也可以像中国汉芯那样自主研发上位机软件了。美滋滋。"}]},{"ID":"20241011010359-aw92hro","Type":"NodeParagraph","Properties":{"id":"20241011010359-aw92hro","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"行吧，有了第一步的成果，现在至少不用那么赶了。对相机的工作有了更多的理解，也许可以趁机再研究一下手册了。看到了熟悉的波特率115200，1起始位，8数据位，1结束位1异或校验位，唤醒了我沉睡已久的51单片机的记忆，串行口通信，大概就是我单片机卡关的梦魇的地方了。"}]},{"ID":"20241011010359-sxpww51","Type":"NodeParagraph","Properties":{"id":"20241011010359-sxpww51","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"小学的时候，一个姐姐送了我单片机和配套的编程书。在小学生有闲的基础上我便开始了单片机的探索。硬件我是不会的，高低电平我也只有直观的印象，什么触发器锁存器一概不懂。就凭着C语言scanf, printf的功底，从点亮LED灯开始尝试。我吃力的学习了74HC573锁存芯片，74HC595移位寄存芯片来点亮流水灯，循环扫描IO口来获得键盘输入，使用奇怪的时序来和1602LCD液晶屏幕通信来显示数据。每一步都跌跌撞撞，每一步都无比艰难。因为任何一个错误的时序都会让整个通信过程失控，而当时我甚至连printf串口发送调试信息也不会。可想而知当时事倍功半的程度。六年级的我卡在了串口通信的章节，迷失在TCON， TMOD， 波特率，定时器中断的迷雾里。我的嵌入式生涯，不出意外的话就应该在这里结束了。"}]},{"ID":"20241011010359-aekeucq","Type":"NodeParagraph","Properties":{"id":"20241011010359-aekeucq","updated":"20241011010359"},"Children":[{"Type":"NodeText","Data":"距那个时候已经过去了将近十年。十年后的我，比起当年有了更多的软件工具和思维工具可以使用。知识和时间给予我再次挑战串口通信的勇气。虽然只是上位机那一侧，如果成功的话也足以让我可以和曾经的自我和解。我谨慎的思考着，打算重启小学时与串口的挑战。"}]}]}