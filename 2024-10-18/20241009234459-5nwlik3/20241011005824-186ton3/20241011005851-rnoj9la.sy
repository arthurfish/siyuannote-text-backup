{"ID":"20241011005851-rnoj9la","Spec":"1","Type":"NodeDocument","Properties":{"id":"20241011005851-rnoj9la","title":"自动登录校园网项目的反思","type":"doc","updated":"20241011010401"},"Children":[{"ID":"20241011010401-3ia2vv2","Type":"NodeParagraph","Properties":{"id":"20241011010401-3ia2vv2","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"先上结果："}]},{"ID":"20241011010401-llnk5cv","Type":"NodeParagraph","Properties":{"id":"20241011010401-llnk5cv","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"url = f\""},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://10.9.1.3:801/eportal/?c=Portal\u0026amp;a=login\u0026amp;callback=dr1003\u0026amp;login_method=1\u0026amp;user_account=%2C0%2C%7Buser_account%7D%40ctc\u0026amp;user_password=%7Buser_password%7D\u0026amp;wlan_user_ip=%7Bwlanuserip%7D\u0026amp;wlan_user_ipv6=\u0026amp;wlan_user_mac=000000000000\u0026amp;wlan_ac_ip=221.178.234.23\u0026amp;wlan_ac_name=\u0026amp;jsVersion=3.3.3\u0026amp;v=","TextMarkTextContent":"http://10.9.1.3:801/eportal/?c=Portal\u0026amp;a=login\u0026amp;callback=dr1003\u0026amp;login_method=1\u0026amp;user_account=%2C0%2C{user_account}%40ctc\u0026amp;user_password={user_password}\u0026amp;wlan_user_ip={wlanuserip}\u0026amp;wlan_user_ipv6=\u0026amp;wlan_user_mac=000000000000\u0026amp;wlan_ac_ip=221.178.234.23\u0026amp;wlan_ac_name=\u0026amp;jsVersion=3.3.3\u0026amp;v="},{"Type":"NodeText","Data":"{random.randint(1000, 9999)}\""}]},{"ID":"20241011010401-dnk92uy","Type":"NodeParagraph","Properties":{"id":"20241011010401-dnk92uy","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"这就是我最终找到的登录的url。如果你想登录校园网的话，用自己的账号和密码和IP地址填充进去然后发送GET请求就可以了。最简单的方法应该就是把这个url中的变量进行填充以后直接粘贴到浏览器的地址栏然后按回车就可以了。为了避免每次都是同样的请求地址导致浏览器不向服务器发送数据反而从本地缓存中取得数据，进而造成没有向服务器发送数据的不符合预期的结果，所以使得请求参数“v“变成一个每次请求都不相同的随机数，防止命中缓存。"}]},{"ID":"20241011010401-fth6qwf","Type":"NodeParagraph","Properties":{"id":"20241011010401-fth6qwf","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"我推荐使用Python脚本构造并发送请求进行自动登录，然后用一个批处理文件调用脚本。这样点击一下就可以登上校园网了。我还没有想到如何在手机端平板端进行处理，也许各位能向我提供好的解决方案？我本来希望能拥有一个运行在后台隔一定时间运行一次请求的后台进程，但是不知道为什么Python脚本总会在while(True)循环中停止，或者说感觉被系统杀掉了。我考虑过使用Windows的服务来实现这一功能，但感觉过于复杂超过我的知识水平就决定放弃。"}]},{"ID":"20241011010401-f1wigm7","Type":"NodeParagraph","Properties":{"id":"20241011010401-f1wigm7","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"后来发现在测试的时候发现我忽视了一个似乎不太重要的设置，导致整个项目差点直接翻车。"}]},{"ID":"20241011010401-ydyr2cy","Type":"NodeParagraph","Properties":{"id":"20241011010401-ydyr2cy","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"以下就是我对这个项目的复盘。"}]},{"ID":"20241011010401-ockwiao","Type":"NodeParagraph","Properties":{"id":"20241011010401-ockwiao","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"项目名称：suda"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"autoconnect"}]},{"ID":"20241011010401-x839ph5","Type":"NodeParagraph","Properties":{"id":"20241011010401-x839ph5","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"项目原因：傻逼的校园网供应公司不用mac地址追踪并"}]},{"ID":"20241011010401-jjeh2my","Type":"NodeParagraph","Properties":{"id":"20241011010401-jjeh2my","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"期待的项目的目的：能够在电脑端用户毫无感知的情况下自动连接校园网，并维持连接"}]},{"ID":"20241011010401-gbmzw9s","Type":"NodeParagraph","Properties":{"id":"20241011010401-gbmzw9s","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"选择工具：Python，url请求"}]},{"ID":"20241011010401-ttx0hts","Type":"NodeParagraph","Properties":{"id":"20241011010401-ttx0hts","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"测试方式：因为校园网使用浏览器的方式输入用户名和密码进行登录，于是首先考虑通过带有参数的url请求方式登录。如果确实是这种方式的话那找到那特定的url请求就算是成功。在Chrome浏览器中打开开发者工具，转到”网络“选项卡，然后在没有连接到校园网的情况下打开"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://www.msftconnecttest.com/redirect","TextMarkTextContent":"http://www.msftconnecttest.com/redirect"},{"Type":"NodeText","Data":"这一链接转到校园网的登录界面，然后手动进行登录，观察”网络“中所记录的发送的网络请求。"}]},{"ID":"20241011010401-v94dcv9","Type":"NodeParagraph","Properties":{"id":"20241011010401-v94dcv9","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"观察这些请求，我发现请求的数量相当多，即使一个小小的网页都要获取各种资源文件，同时也有很多的疑似必要的登录请求，我用是否被缓存的方式区分有关资源的请求和发送数据的请求。被缓存就是资源，未被缓存就是发送数据的请求。最终留在”网络“选项卡里有以下这些可疑的请求（我用python的格式化字符串来表示每个人不同的IP地址，账户名和随机数）"}]},{"ID":"20241011010401-zzofnko","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20241011010401-zzofnko","updated":"20241011010401"},"Children":[{"ID":"20241011010401-ze6zns1","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20241011010401-ze6zns1","updated":"20241011010401"},"Children":[{"ID":"20241011010401-8ro9ytu","Type":"NodeParagraph","Properties":{"id":"20241011010401-8ro9ytu","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"url = f\"[http://10.9.1.3:801/eportal/?c=Portal\u0026a=page"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"type"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"data\u0026callback=dr1001\u0026v={random.randrange(1000,9999)}](http://10.9.1.3:801/eportal/?c=Portal\u0026a=page_type_data\u0026callback=dr1001\u0026v=%7Brandom.randrange(1000,9999)%7D)\""}]}]},{"ID":"20241011010401-b0y7v6g","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20241011010401-b0y7v6g","updated":"20241011010401"},"Children":[{"ID":"20241011010401-lzcpbok","Type":"NodeParagraph","Properties":{"id":"20241011010401-lzcpbok","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"url = f'"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://10.9.1.3:801/eportal/?c=Portal\u0026amp;a=online_list\u0026amp;callback=dr1002\u0026amp;user_account=drcom\u0026amp;user_password=123\u0026amp;wlan_user_mac=000000000000\u0026amp;wlan_user_ip=%7Bwlanuserip%7D\u0026amp;curr_user_ip=%7Bwlanuserip%7D\u0026amp;jsVersion=3.3.3\u0026amp;v=%7Brandom.randrange(1000,9999)%7D","TextMarkTextContent":"http://10.9.1.3:801/eportal/?c=Portal\u0026amp;a=online_list\u0026amp;callback=dr1002\u0026amp;user_account=drcom\u0026amp;user_password=123\u0026amp;wlan_user_mac=000000000000\u0026amp;wlan_user_ip={wlanuserip}\u0026amp;curr_user_ip={wlanuserip}\u0026amp;jsVersion=3.3.3\u0026amp;v={random.randrange(1000,9999)}"},{"Type":"NodeText","Data":"'"}]}]},{"ID":"20241011010401-lnsl9l6","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20241011010401-lnsl9l6","updated":"20241011010401"},"Children":[{"ID":"20241011010401-e53pbav","Type":"NodeParagraph","Properties":{"id":"20241011010401-e53pbav","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"url5 = f\"[http://10.9.1.3:801/eportal/?c=Portal\u0026a=user"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"info\u0026callback=dr1002\u0026user"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"account={user"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"account}%40ctc\u0026wlan"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"user"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"ip={wlanuserip}\u0026jsVersion=3.3.3\u0026v={random.randrange(1000,9999)}](http://10.9.1.3:801/eportal/?c=Portal\u0026a=user_info\u0026callback=dr1002\u0026user_account=%7Buser_account%7D%40ctc\u0026wlan_user_ip=%7Bwlanuserip%7D\u0026jsVersion=3.3.3\u0026v=%7Brandom.randrange(1000,9999)%7D)\""}]}]}]},{"ID":"20241011010401-i73eosn","Type":"NodeParagraph","Properties":{"id":"20241011010401-i73eosn","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"这些url包含了请求参数wlanuserip, user"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"account,还有随机数v"}]},{"ID":"20241011010401-vir34m0","Type":"NodeParagraph","Properties":{"id":"20241011010401-vir34m0","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"猜猜哪个是真正的登录请求? 答案是都不是。"}]},{"ID":"20241011010401-nm3nad2","Type":"NodeParagraph","Properties":{"id":"20241011010401-nm3nad2","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"我把这些地址按”网络“中的顺序写到Python Jupyter的单元格里，填上自己的数据并用Requests库构造请求，然后“运行所有单元格”，但结果是没有一个成功。"}]},{"ID":"20241011010401-br095h3","Type":"NodeParagraph","Properties":{"id":"20241011010401-br095h3","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"其中一些响应在messege字段中返回了一些类似”"},{"Type":"NodeBackslash","Data":"span\\","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeText","Data":"u8d26“的utf转义字符串，我用  bytes(str(\""},{"Type":"NodeBackslash","Data":"span\\","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeText","Data":"u8d26"},{"Type":"NodeBackslash","Data":"span\\","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeText","Data":"u53f7"},{"Type":"NodeBackslash","Data":"span\\","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeText","Data":"u4e0d"},{"Type":"NodeBackslash","Data":"span\\","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeText","Data":"u5b58"},{"Type":"NodeBackslash","Data":"span\\","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"\\"}]},{"Type":"NodeText","Data":"u5728\"), 'utf-8').decode(\"unicode"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"escape\")  函数将其转化为汉字，发现结果是“用户不存在”。我到底错在了哪里呢？"}]},{"ID":"20241011010401-4q3sc3z","Type":"NodeParagraph","Properties":{"id":"20241011010401-4q3sc3z","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"然后我在另一次测试中偶然的首先在浏览器中登录了校园网，然后再运行Jupyter的全部单元格，但这一次却似乎成功了。其中一个请求返回的响应中status字段的值为1，并且message字段转化为汉字后显示为”登录成功“。似乎我成功做到了通过请求登录校园网的要求，然而在往后的多次实验中，在未事先用浏览器登录校园网的情况中登录尝试均告失败。我无法理解到底其中有什么缘由。"}]},{"ID":"20241011010401-2f69zxs","Type":"NodeParagraph","Properties":{"id":"20241011010401-2f69zxs","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"现在我回顾这个情景，我觉得这应该能暗示当时的我一种可能性：我所发送的所有请求似乎是在查询登录成功的状态，而不是登录"}]},{"ID":"20241011010401-v9uwkpp","Type":"NodeParagraph","Properties":{"id":"20241011010401-v9uwkpp","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"然后我又注意到了每次请求中随请求参数附上的cookie。cookie简单来说就是像请求参数一样浏览器发送给网站的另一种数据。在浏览器中发送的请求里cookie一栏中有个叫PHPSESSION的字段。我猜测请求的成功与否与请求是否带有正确的PHPSESSION有关。于是我又提取存储出第一个请求发送后服务器响应中的cookie，然后在每一次后续请求中也随之发送cookie。然而还是不管用，照样登录失败。"}]},{"ID":"20241011010401-bshqsg1","Type":"NodeParagraph","Properties":{"id":"20241011010401-bshqsg1","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"到底出了什么问题？我分析了下载的javascript文件，让AI向我解释其中每一个函数的作用，问它脚本到底有没有发送请求，以及怎么发送请求的。然而还是毫无头绪。我甚至下载了一个Wireshark想用来抓包，但想想可能要配置什么https证书之类的东西，在头大到爆炸之前我果断放弃了这一尝试。wireshark似乎是主要用来分析协议的工具，也许我当时如果使用曾经用过的fiddle的。如果我用fiddle的话应该能注意到那个盲生的华点？大概率可以。"}]},{"ID":"20241011010401-y5hthh5","Type":"NodeParagraph","Properties":{"id":"20241011010401-y5hthh5","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"我现在意识到我可能犯了一个路线上的错误：我不应该在处理这个问题上单打独斗，在中国使用类似校园网登录系统的肯定不止我一个，绝对会有人成功实现自动登录并把过程分享在网上，我应当在网上找找其他人分享的解决方案。在"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://zhuanlan.zhihu.com/p/364016452","TextMarkTextContent":"https://zhuanlan.zhihu.com/p/364016452"},{"Type":"NodeText","Data":"上发现了我问题的所在。我从来没有想到一个忽略的步骤就会造成如此严重的后果。我少了一个步骤：勾选Chrome网络选项卡中的”保留日志“选项"}]},{"ID":"20241011010401-wgvhah5","Type":"NodeParagraph","Properties":{"id":"20241011010401-wgvhah5","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"Chrome网页调试工具在重定向之后会删除原先页面的所发送的请求，而学校校园网登录按钮按下后重定向到了成功界面，这意味着我根本没有看见真正用来登录的网络请求！其实我还可以用别的方式发现这个问题，因为之前找到的url里所需要的信息只有IP地址，用户名，但却没有密码。不需要密码就能登录吗？我之前确实应该好好从信息量的角度思考这个问题并做实验验证。不过怎么说，这算是我第一次尝试这方面的挑战，出现问题应该也无可厚非。我向来是坚持宽以律己宽以待人原则的。下次注意不就可以了吗"}]},{"ID":"20241011010401-ebc0yeg","Type":"NodeParagraph","Properties":{"id":"20241011010401-ebc0yeg","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"在获得登录请求url的过程中，相比于知识欠缺，我更在意的还是我在路线上出现的问题。面对一个普遍的问题，我却没有认真考虑其他人的解决方案，而且阅读他人的教程时也不够细心，跳过了关键的步骤。当然这么做如果建立在我在网络领域知识充足的前提下也无可厚非，但显然我做不到这点，我对我使用的工具Chrome调试工具缺乏足够的了解，不知道它的记录请求的具体机制，以至于最后根本没有看到真实的登录请求。而且我使用了不熟悉的抓包工具，使用没有经验的wireshark而不是用过的fiddle，如果我用了fiddle大概也能看见Chrome重定向之前发出的请求。而且我也没有发现我所认为的登录url居然没有使用关键的密码参数，即使情况确实如此我也应该做实验验证。"}]},{"ID":"20241011010401-gacz4y0","Type":"NodeParagraph","Properties":{"id":"20241011010401-gacz4y0","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"我认为我在未来能做的改进如下："}]},{"ID":"20241011010401-9hknx24","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20241011010401-9hknx24","updated":"20241011010401"},"Children":[{"ID":"20241011010401-et5d0r4","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20241011010401-et5d0r4","updated":"20241011010401"},"Children":[{"ID":"20241011010401-ccnqnuq","Type":"NodeParagraph","Properties":{"id":"20241011010401-ccnqnuq","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"对于通用问题多看看其他人提出的解决方案"}]}]},{"ID":"20241011010401-6oub2v8","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20241011010401-6oub2v8","updated":"20241011010401"},"Children":[{"ID":"20241011010401-8ud0eln","Type":"NodeParagraph","Properties":{"id":"20241011010401-8ud0eln","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"要熟悉项目开发中使用的工具。"}]}]},{"ID":"20241011010401-l0t2ytu","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20241011010401-l0t2ytu","updated":"20241011010401"},"Children":[{"ID":"20241011010401-3g5p0rw","Type":"NodeParagraph","Properties":{"id":"20241011010401-3g5p0rw","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"要对重要环节所需信息量拥有一定认识"}]}]}]},{"ID":"20241011010401-5flzys5","Type":"NodeParagraph","Properties":{"id":"20241011010401-5flzys5","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"获取登录url的步骤结束了，接下来我应该想办法让它自动化运行起来。我最初设计是让Python脚本在系统启动时，从休眠唤醒时自动运行。然而因为Windows系统电源事件涉及到win32编程，我的又一知识盲区而作罢。于是选择常驻后台定时检测网络状态重连的方案。我预计实现这一系列功能不会花费我多少时间：自动启动的方式很简单，就是把启动脚本的cmd放到开始菜单的”启动“文件夹内即可；检测网络状态可以使用Ping某个网络地址；定时可以用time.sleep()解决。然而让我意想不到的是，我似乎根本无法实现”常驻后台“这一功能。"}]},{"ID":"20241011010401-w0hngya","Type":"NodeParagraph","Properties":{"id":"20241011010401-w0hngya","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"我的具体实现方案是在一个while的无限循环里，每次延时3秒对向www.baidu.com发送请求，如果响应状态码不是”200 OK“那就发送构造好的无Cookie的url请求。为了更好的观测程序的运行状态我让它在每个请求之后”Bi“一声。在写Bat脚本时遇到了一点点麻烦：我在开发时用了Python的venv虚拟环境，所以启动脚本时必须使用虚拟环境中的Python解释器的完整路径，不过使用绝对路径应该算是种稳妥的常识，倒不用多说什么。系统启动后，我听着大概每3秒一次每次长度为500毫秒的哔哔声，感觉相当愉悦。"}]},{"ID":"20241011010401-lq9nfh5","Type":"NodeParagraph","Properties":{"id":"20241011010401-lq9nfh5","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"然而我没愉悦多久，耳机里的哔哔声就莫名奇妙的停止了。我有点慌，重新启动电脑后哔哔声又开始，但当我马上按下电源开关让电脑陷入休眠再唤醒之后，哔哔声没有恢复。"}]},{"ID":"20241011010401-vnbkhkh","Type":"NodeParagraph","Properties":{"id":"20241011010401-vnbkhkh","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"啊出了什么情况What the fuck?! 这远远的超出了我的意料。我本来认为，一个程序除非自愿或在任务管理器中被结束，否则就不会退出。实际中这种类似”杀后台“的体验挺出我意料的，我大概有如下的方案进行解决："}]},{"ID":"20241011010401-qgki3wu","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20241011010401-qgki3wu","updated":"20241011010401"},"Children":[{"ID":"20241011010401-yhpfcjw","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20241011010401-yhpfcjw","updated":"20241011010401"},"Children":[{"ID":"20241011010401-263ngb3","Type":"NodeParagraph","Properties":{"id":"20241011010401-263ngb3","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"使用Windows的服务机制通过Python脚本创造一个服务，然后使其不间断的运行。然而我对win32编程毫无了解，相关教程看得我相当头疼，放弃。"}]}]},{"ID":"20241011010401-34ov1q8","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20241011010401-34ov1q8","updated":"20241011010401"},"Children":[{"ID":"20241011010401-vnzdqhk","Type":"NodeParagraph","Properties":{"id":"20241011010401-vnzdqhk","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"使用系统的计划任务，3秒执行一次。然而我是win10教育版，没有内置计划任务，放弃。"}]}]},{"ID":"20241011010401-qkm80yt","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"My4=","Num":3},"Properties":{"id":"20241011010401-qkm80yt","updated":"20241011010401"},"Children":[{"ID":"20241011010401-m18110w","Type":"NodeParagraph","Properties":{"id":"20241011010401-m18110w","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"我中午在床上晃荡晃荡想到的方法：似乎可以用服务容器来启动监视这个脚本，因为之前看到一个网易的游戏引擎大佬写过相关的文章。倒是值得一试"}]}]}]},{"ID":"20241011010401-le5qhzm","Type":"NodeParagraph","Properties":{"id":"20241011010401-le5qhzm","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"我觉得最后一个方法最有前途，因为在我所能接触领域中到处都是轮子，比起自己实现用别人的轮子的话效率总是更高。从复杂度角度来看，框架就是用配置与集成的复杂度代替了实现的复杂度。我大概还要再学一段时间的轮子。"}]},{"ID":"20241011010401-6lzjx3r","Type":"NodeParagraph","Properties":{"id":"20241011010401-6lzjx3r","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"我的项目进行到这大概就草草结束了，没有实现当初静默连接的目的，不过也并非毫无所得。我可以一开机就登录网络，等断开的时候再双击调用Python脚本的批处理文件就能连上了。手机没必要连校园网，而iPad，平板还是想连上的。老实说我不太想处理这些事情，大概以后就直接鸽了。最后祭出登录函数镇楼。"}]},{"ID":"20241011010401-dzko4pf","Type":"NodeParagraph","Properties":{"id":"20241011010401-dzko4pf","updated":"20241011010401"},"Children":[{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"#"}]},{"Type":"NodeText","Data":"This section is to get IP address.\ndomain = \"\n[http://www.msftconnecttest.com/redirect](http://www.msftconnecttest.com/redirect)\"\nresp = requests.get(domain)\nurl1 = resp.history[0].headers['location']\nwlanuserip = parse.parse"},{"Type":"NodeBackslash","Data":"span","Children":[{"Type":"NodeText","Data":"_"}]},{"Type":"NodeText","Data":"qs((parse.urlparse(url1).query)).get('wlanuserip')[0]"}]},{"ID":"20241011010401-57iazge","Type":"NodeParagraph","Properties":{"id":"20241011010401-57iazge","updated":"20241011010401"},"Children":[{"Type":"NodeText","Data":"url2 = f\""},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"http://10.9.1.3:801/eportal/?c=Portal\u0026amp;a=login\u0026amp;callback=dr1003\u0026amp;login%5C_method=1\u0026amp;user%5C_account=%2C0%2C%7Buser%5C_account%7D%40ctc\u0026amp;user%5C_password=%7Buser%5C_password%7D\u0026amp;wlan%5C_user%5C_ip=%7Bwlanuserip%7D\u0026amp;wlan%5C_user%5C_ipv6=\u0026amp;wlan%5C_user%5C_mac=000000000000\u0026amp;wlan%5C_ac%5C_ip=221.178.234.23\u0026amp;wlan%5C_ac%5C_name=\u0026amp;jsVersion=3.3.3\u0026amp;v=","TextMarkTextContent":"http://10.9.1.3:801/eportal/?c=Portal\u0026amp;a=login\u0026amp;callback=dr1003\u0026amp;login\\_method=1\u0026amp;user\\_account=%2C0%2C{user\\_account}%40ctc\u0026amp;user\\_password={user\\_password}\u0026amp;wlan\\_user\\_ip={wlanuserip}\u0026amp;wlan\\_user\\_ipv6=\u0026amp;wlan\\_user\\_mac=000000000000\u0026amp;wlan\\_ac\\_ip=221.178.234.23\u0026amp;wlan\\_ac\\_name=\u0026amp;jsVersion=3.3.3\u0026amp;v="},{"Type":"NodeText","Data":"{random.randint(1000, 9999)}\"\nresp = requests.get(url2)\nprint(resp.content)"}]}]}